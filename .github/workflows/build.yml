name: Build

on: push

jobs:
  mysql:
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"

    services:
      mariadb:
        image: mariadb
        env:
          MARIADB_ROOT_PASSWORD: django_safemigrate
        options: >-
          --health-cmd "mariadb-admin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 3306:3306

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.python-version }}-v1-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/tox.ini') }}
          restore-keys: |
            ${{ matrix.python-version }}-v1-

      - name: Install Tox
        run: python -m pip install --upgrade pip tox tox-gh-actions coverage[toml]

      - name: Run tox
        env:
          DB: mysql
          DATABASE_URL: "mysql://root:django_safemigrate@127.0.0.1/django_safemigrate"
        run: |
          tox
          python -m coverage combine
          python -m coverage xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: Python ${{ matrix.python-version }} MySQL
          files: "coverage.xml"
          fail_ci_if_error: true
          verbose: true


  postgres:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        database: [pg2]
        # Add psycopg3 to our matrix for modern python versions
        include:
            - python-version: '3.10'
              database: pg3
            - python-version: '3.11'
              database: pg3
            - python-version: '3.12'
              database: pg3
            - python-version: '3.13'
              database: pg3

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: django_safemigrate
          POSTGRES_USER: django_safemigrate
          POSTGRES_PASSWORD: django_safemigrate
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.python-version }}-v1-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/tox.ini') }}
          restore-keys: |
            ${{ matrix.python-version }}-v1-

      - name: Install Tox
        run: python -m pip install --upgrade pip tox tox-gh-actions coverage[toml]

      - name: Run tox
        env:
          DB: ${{ matrix.database }}
          DATABASE_URL: "postgresql://django_safemigrate:django_safemigrate@localhost/django_safemigrate"
        run: |
          tox
          python -m coverage combine
          python -m coverage xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: Python ${{ matrix.python-version }} ${{ matrix.database }}
          files: "coverage.xml"
          fail_ci_if_error: true
          verbose: true


  sqlite:
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.python-version }}-v1-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/tox.ini') }}
          restore-keys: |
            ${{ matrix.python-version }}-v1-

      - name: Install Tox
        run: python -m pip install --upgrade pip tox tox-gh-actions coverage[toml]

      - name: Run tox
        env:
          DB: sqlite
          DATABASE_URL: "sqlite:///:memory:"
        run: |
          tox
          python -m coverage combine
          python -m coverage xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: Python ${{ matrix.python-version }} SQLite
          files: "coverage.xml"
          fail_ci_if_error: true
          verbose: true
